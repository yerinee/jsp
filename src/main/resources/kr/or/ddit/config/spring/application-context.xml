<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- kr.or.ddit 패키지 하위의 클래스중 @Controller 어노테이션이 붙은
		 클래스를 스캔하여 스프링 빈으로 생성 -->
		 
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<bean class ="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- prefix : 접두어, suffix : 접미어
			 Contoller가 리턴하는 문자열에 prefix, suffix를 적용하여 해당 경로의 파일로
			 응답을 생성
			 LoginController.getView() ==> "login/view"
			 
			  		prefix		   viewName		suffix
			 "/WEB-INF/views/" + "login/view" + ".jsp"
			 "/WEB-INF/views/login/view.jsp"
		  -->
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- @Controller, @RequestMapping, 
		HandlerMapping, HandlerAdapter, validation,
		formatting conversion service 등 
		spring mvc 패턴에 필요한 어노테이션, 엘레먼트 처리 -->	
	<mvc:annotation-driven/>
	
	
	<!-- spring이 자기가 처리하지 못하는요청에대해 서버에 등록된 default servlet에게 위임을 한다.-->
	<mvc:default-servlet-handler/>
</beans>
