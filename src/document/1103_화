리터럴(literal) : 값 자체
리터럴 표기법

정수 표현?
int a = 10;

문자열 표현?
.java
Strig str = "hello, world";

.sql 
select 'hello, world'
from dual

날짜 표현?
java ==> Date 객체를 통해 표현, 
sql  ==> 일관된 표기법이 없고, NLS 날짜표기형식을 따르지만 TO_DATE 함수 사용을 권장 
	(sysdate -> 함수, 오라클 서버의 현재 시간을 반환하는 오라클 내장 함수)
	한국 : '2020-11-03'
	미국 : '11-03-2020'


객체의 필드(속성)에 값을 주입시 xml에서는 문자열과 숫자 구분이 되지 않지만
해당 필드의 타입을 보고 스프링 컨테이너가 적당한 형변환을 통해 값을 주입한다.

단 날짜에 대해서는 스프링 프레임워크에서 기본 전략을 제공하지 않기 때문에
개발자가 별도로 설정을 해줘야한다.

타입변환이 필요로 하는 곳
1. bean 속성 주입
2. controller 메소드의 파라미터 바인딩

스프링 타입변환 방식 3가지
1. property editor (문자 -> 타입변환)
2. conversion service ( 타입 -> 타입변환)
	.Converter<변경전타입, 변경후타입>
	.스프링 프레임워크에 등록(bean 이름이 conversionService를 사용하게끔 설정되어 있음)
		ConversionServiceFactoryBean 클래스의 converters 속성에 set으로 넣어준다.
	 <bean id ="conversionService" class="...ConversionServiceFactoryBean">
	 	<property name="converters">
	 		<set>
	 			<bean class= "Converter 인터페이스를 구현한 클래스"/>
	 		</set>
	 	</property>
	 </bean>
	
3. formatting conversion service (******사용할거다)

	1. 주입하려는 필드에 포맷팅과 관련된 어노테이션 설정
	2. FormattingConversionServiceFactoryBean 클래스를 스프링 빈으로 등록
		(** 빈이름이 conversionService로 고정됨)
		
		
Spring MVC
스프링 컨테이너의 부모-자식 관계
객체의 상속과 동일한 원리
부모 컨테이너의 등록된 스프링빈을 자식 컨테이너에서도 참조가능
부모는 자식 컨테이너에 등록된 스프링빈을 참조 할 수 없음.

자식 컨테이너가 둘 이상일 때, 두 자식 컨테이너에서 공통적으로 사용할
스프링 빈을 부모 컨테이너에 넣게 될 경우, 자식 입장에서는 별도의 스프링 빈을 등록하지 않고 사용가능

부모 컨테이너에서 스프링빈을 한번만 등록하므로 메모리 절약

자식 컨테이너가 하나만 필요한 상황이더라도 추후 확장성을 위해
부모 - 자식 컨테이너로 분리하여 확장을 고려한다.

부모 컨테이너 생성
ContextLoaderListener 클래스를 이용하여 서버 기동시 이벤트를 감지
<listener>
	<listener-class>org.springframework....ContextLoaderListener</listener-class>
</listener>

	--> <context-param>
		  <param-name>contextConfigLocation</param-name>
		  <param-value>설정파일 위치</param-value>
		</context-param>
		초기화 파라미터중 contextConfigLocation으로 설정된 값을 찾아
		부모 컨테이너(service, dao)를 생성


자식 컨테이너 생성
dispatcherservlet을 통해 생성
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework...DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>설정파일 위치, 설정파일 위치</param-value>
		</init-param>	
	</servlet>








dispatcherServlet의 url-pattern에 따른 정상 처리여부

url-pattern 	mvc:default-	spring controller(/login/view.do)  		index.jsp		js/bootstrap.js
				servlet-
				handler

 	/*			 미적용						X								X					X
	/*			  적용
	/ 			 미적용						O								O					X
	/ 			  적용						O								O					O
